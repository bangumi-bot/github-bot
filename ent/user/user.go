// Code generated by ent, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldGithubID holds the string denoting the github_id field in the database.
	FieldGithubID = "github_id"
	// FieldBangumiID holds the string denoting the bangumi_id field in the database.
	FieldBangumiID = "bangumi_id"
	// EdgePullRequests holds the string denoting the pull_requests edge name in mutations.
	EdgePullRequests = "pull_requests"
	// Table holds the table name of the user in the database.
	Table = "users"
	// PullRequestsTable is the table that holds the pull_requests relation/edge.
	PullRequestsTable = "pulls"
	// PullRequestsInverseTable is the table name for the Pulls entity.
	// It exists in this package in order to avoid circular dependency with the "pulls" package.
	PullRequestsInverseTable = "pulls"
	// PullRequestsColumn is the table column denoting the pull_requests relation/edge.
	PullRequestsColumn = "user_pull_requests"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldGithubID,
	FieldBangumiID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// GithubIDValidator is a validator for the "github_id" field. It is called by the builders before save.
	GithubIDValidator func(int64) error
	// BangumiIDValidator is a validator for the "bangumi_id" field. It is called by the builders before save.
	BangumiIDValidator func(int64) error
)
